{"ast":null,"code":"import { createLogger } from 'redux-logger';\nimport rootReducer from './root.reducer';\nimport { persistStore } from 'redux-persist';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root.sagas';\nconst loggerConfig = createLogger({\n  collapsed: true\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(loggerConfig);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["D:/0 - Web Projects/06 - Complete React Developer in 2020/7-impormotriz-shop_v3/client/src/redux/store.js"],"names":["createLogger","rootReducer","persistStore","createStore","applyMiddleware","createSagaMiddleware","rootSaga","loggerConfig","collapsed","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,YAAY,GAAGP,YAAY,CAAC;AAC9BQ,EAAAA,SAAS,EAAE;AADmB,CAAD,CAAjC;AAIA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,YAAjB;AACH;;AAED,MAAMQ,KAAK,GAAGZ,WAAW,CACrBF,WADqB,EAErBG,eAAe,CAAC,GAAGM,WAAJ,CAFM,CAAzB;AAKAD,cAAc,CAACO,GAAf,CAAmBV,QAAnB;AAEA,MAAMW,SAAS,GAAGf,YAAY,CAACa,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBE,SAAhB","sourcesContent":["import { createLogger } from 'redux-logger';\r\nimport rootReducer from './root.reducer';\r\nimport { persistStore } from 'redux-persist';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root.sagas';\r\n\r\nconst loggerConfig = createLogger({\r\n    collapsed: true,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(loggerConfig);\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}