{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { setMenuActiveItem } from '../menu/menu.actions';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data(),\n      checkUser: additionalData\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName,\n        cart: []\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* setMenu({\n  payload: {\n    checkUser\n  }\n}) {\n  if (!checkUser) {\n    yield put(setMenuActiveItem('Inicio'));\n  } else {\n    yield null;\n  }\n}\nexport function* isUserAuthenticated({\n  payload\n}) {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth, payload);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignInSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, setMenu);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess), call(onSignInSuccess)]);\n}","map":{"version":3,"sources":["D:/0 - Web Projects/06 - Complete React Developer in 2020/7-impormotriz-shop_v3/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","setMenuActiveItem","UserActionTypes","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","checkUser","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","signUp","displayName","createUserWithEmailAndPassword","cart","signInAfterSignUp","setMenu","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignInSuccess","SIGN_IN_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser,\r\n} from '../../firebase/firebase.utils';\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure,\r\n} from './user.actions';\r\nimport { setMenuActiveItem } from '../menu/menu.actions';\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(\r\n            createUserProfileDocument,\r\n            userAuth,\r\n            additionalData\r\n        );\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({\r\n                id: userSnapshot.id,\r\n                ...userSnapshot.data(),\r\n                checkUser: additionalData,\r\n            })\r\n        );\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(\r\n            email,\r\n            password\r\n        );\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signUp({\r\n    payload: { email, password, displayName },\r\n}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n        );\r\n\r\n        yield put(\r\n            signUpSuccess({\r\n                user,\r\n                additionalData: { displayName, cart: [] },\r\n            })\r\n        );\r\n    } catch (error) {\r\n        yield put(signUpFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({\r\n    payload: { user, additionalData },\r\n}) {\r\n    yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* setMenu({ payload: { checkUser } }) {\r\n    if (!checkUser) {\r\n        yield put(setMenuActiveItem('Inicio'));\r\n    } else {\r\n        yield null;\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated({ payload }) {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) {\r\n            return;\r\n        }\r\n        yield getSnapshotFromUserAuth(userAuth, payload);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    );\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    );\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAuthenticated\r\n    );\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_SUCCESS,\r\n        signInAfterSignUp\r\n    );\r\n}\r\n\r\nexport function* onSignInSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, setMenu);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess),\r\n        call(onSignInSuccess),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}