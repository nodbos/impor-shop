{"ast":null,"code":"var _jsxFileName = \"D:\\\\0 - Web Projects\\\\06 - Complete React Developer in 2020\\\\7-impormotriz-shop_v3\\\\client\\\\src\\\\components\\\\product-item\\\\product-item.components.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport ButtonSemantic from '../button-semantic/button-semantic.component';\nimport 'semantic-ui-css/semantic.min.css';\nimport './product-item.styles.scss';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: item => {\n      dispatch(addItem(item));\n    }\n  };\n};\n\nconst ProductItem = ({\n  item,\n  addItem\n}) => {\n  const {\n    id,\n    imageUrl,\n    nombre,\n    precio,\n    //cantidad,\n    //importante,\n    //nuevo,\n    //obsoleto,\n    //procedencia,\n    referencia,\n    vehiculo_tipo\n  } = item;\n  const nombreCompleto = `${id.split('_')[0]} ${nombre}`.toUpperCase();\n\n  function numberWithCommas(num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  } //column\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"product-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: imageUrl,\n    wrapped: true,\n    ui: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left aligned column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, nombreCompleto), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, referencia.toUpperCase()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right aligned column semantic-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"dollar sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), numberWithCommas(precio))), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Este repuesto funciona para los siguientes carros:\", ' ', id.split('_')[0] + ' ' + vehiculo_tipo[0], \",\", ' ', id.split('_')[0] + ' ' + vehiculo_tipo[1], \",\", ' ', id.split('_')[0] + ' ' + vehiculo_tipo[2])), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSemantic, {\n    productMargin: true,\n    onClick: () => {\n      addItem(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"angle down\",\n    size: \"big\",\n    className: \"semantic-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default connect(null, mapDispatchToProps)(ProductItem);","map":{"version":3,"sources":["D:/0 - Web Projects/06 - Complete React Developer in 2020/7-impormotriz-shop_v3/client/src/components/product-item/product-item.components.jsx"],"names":["React","connect","addItem","Card","Icon","Image","ButtonSemantic","mapDispatchToProps","dispatch","item","ProductItem","id","imageUrl","nombre","precio","referencia","vehiculo_tipo","nombreCompleto","split","toUpperCase","numberWithCommas","num","toString","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport ButtonSemantic from '../button-semantic/button-semantic.component';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './product-item.styles.scss';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item));\r\n        },\r\n    };\r\n};\r\n\r\nconst ProductItem = ({ item, addItem }) => {\r\n    const {\r\n        id,\r\n        imageUrl,\r\n        nombre,\r\n        precio,\r\n        //cantidad,\r\n        //importante,\r\n        //nuevo,\r\n        //obsoleto,\r\n        //procedencia,\r\n        referencia,\r\n        vehiculo_tipo,\r\n    } = item;\r\n\r\n    const nombreCompleto = `${\r\n        id.split('_')[0]\r\n    } ${nombre}`.toUpperCase();\r\n\r\n    function numberWithCommas(num) {\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    //column\r\n\r\n    return (\r\n        <Card className='product-item'>\r\n            <Image src={imageUrl} wrapped ui={false} />\r\n            <Card.Content>\r\n                <div className='product-header'>\r\n                    <div className='left aligned column'>\r\n                        <Card.Header>{nombreCompleto}</Card.Header>\r\n                        <Card.Meta>\r\n                            <span>{referencia.toUpperCase()}</span>\r\n                        </Card.Meta>\r\n                    </div>\r\n                    <div className='right aligned column semantic-price'>\r\n                        <Icon name='dollar sign' />\r\n                        {numberWithCommas(precio)}\r\n                    </div>\r\n                </div>\r\n\r\n                <Card.Description>\r\n                    Este repuesto funciona para los siguientes carros:{' '}\r\n                    {id.split('_')[0] + ' ' + vehiculo_tipo[0]},{' '}\r\n                    {id.split('_')[0] + ' ' + vehiculo_tipo[1]},{' '}\r\n                    {id.split('_')[0] + ' ' + vehiculo_tipo[2]}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <div className='center aligned'>\r\n                    <ButtonSemantic\r\n                        productMargin\r\n                        onClick={() => {\r\n                            addItem(item);\r\n                        }}>\r\n                        <Icon\r\n                            name='angle down'\r\n                            size='big'\r\n                            className='semantic-more'\r\n                        />\r\n                    </ButtonSemantic>\r\n                </div>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductItem);\r\n"]},"metadata":{},"sourceType":"module"}