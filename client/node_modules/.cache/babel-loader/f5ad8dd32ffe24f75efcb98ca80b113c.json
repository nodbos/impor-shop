{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCcyUU3r1mf0QcJ4KNynTXBeOn4xedQRaY',\n  //process.env.REACT_APP_FIREBASE\n  authDomain: 'impormotriz-shop-db.firebaseapp.com',\n  databaseURL: 'https://impormotriz-shop-db.firebaseio.com',\n  projectId: 'impormotriz-shop-db',\n  storageBucket: 'impormotriz-shop-db.appspot.com',\n  messagingSenderId: '584829029916',\n  appId: '1:584829029916:web:6257583abf21f87edf59d9',\n  measurementId: 'G-PLER8ZRK5K'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getUserCartRef = async userId => {\n  const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n  const snapShot = await cartsRef.get();\n\n  if (snapShot.empty) {\n    const cartDocRef = firestore.collection('carts').doc();\n    await cartDocRef.set({\n      userId,\n      cartItems: []\n    });\n    return cartDocRef;\n  } else {\n    return snapShot.docs[0].ref;\n  }\n};\nexport const convertCollectionsSnapshotToMap = (collections, type) => {\n  const transformCollections = collections.docs.map(doc => {\n    if (type === 'products') {\n      const {\n        articulos,\n        imageUrl,\n        linkUrl,\n        size,\n        title\n      } = doc.data();\n      return {\n        id: doc.id,\n        articulos,\n        imageUrl,\n        linkUrl,\n        routeName: encodeURI(title.toLowerCase()),\n        size,\n        title\n      };\n    } else if (type === 'posts') {\n      const {\n        content,\n        description,\n        imageUrl,\n        linkUrl,\n        title\n      } = doc.data();\n      return {\n        content,\n        description,\n        id: doc.id,\n        imageUrl,\n        linkUrl,\n        routeName: encodeURI(title.toLowerCase()),\n        title\n      };\n    }\n\n    return {\n      id: doc.id,\n      error: 'ERROR'\n    };\n  });\n  return transformCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider);\n}; //------------------------------------------------------------------------------------//\n//------------------------------------------------------------------------------------//\n//------------------------------------------------------------------------------------//\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n}; //------------------------------------------------------------------------------------//\n//------------------------------------------------------------------------------------//\n//------------------------------------------------------------------------------------//\n\nexport default firebase;","map":{"version":3,"sources":["D:/0 - Web Projects/06 - Complete React Developer in 2020/7-impormotriz-shop_v3/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","getUserCartRef","userId","cartsRef","collection","where","empty","cartDocRef","cartItems","docs","ref","convertCollectionsSnapshotToMap","collections","type","transformCollections","map","articulos","imageUrl","linkUrl","size","title","data","id","routeName","encodeURI","toLowerCase","content","description","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: 'AIzaSyCcyUU3r1mf0QcJ4KNynTXBeOn4xedQRaY', //process.env.REACT_APP_FIREBASE\r\n    authDomain: 'impormotriz-shop-db.firebaseapp.com',\r\n    databaseURL: 'https://impormotriz-shop-db.firebaseio.com',\r\n    projectId: 'impormotriz-shop-db',\r\n    storageBucket: 'impormotriz-shop-db.appspot.com',\r\n    messagingSenderId: '584829029916',\r\n    appId: '1:584829029916:web:6257583abf21f87edf59d9',\r\n    measurementId: 'G-PLER8ZRK5K',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (\r\n    userAuth,\r\n    additionalData\r\n) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createAt,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating user', error.message);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n};\r\n\r\nexport const getUserCartRef = async userId => {\r\n    const cartsRef = firestore\r\n        .collection('carts')\r\n        .where('userId', '==', userId);\r\n    const snapShot = await cartsRef.get();\r\n\r\n    if (snapShot.empty) {\r\n        const cartDocRef = firestore.collection('carts').doc();\r\n        await cartDocRef.set({ userId, cartItems: [] });\r\n        return cartDocRef;\r\n    } else {\r\n        return snapShot.docs[0].ref;\r\n    }\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (\r\n    collections,\r\n    type\r\n) => {\r\n    const transformCollections = collections.docs.map(doc => {\r\n        if (type === 'products') {\r\n            const {\r\n                articulos,\r\n                imageUrl,\r\n                linkUrl,\r\n                size,\r\n                title,\r\n            } = doc.data();\r\n\r\n            return {\r\n                id: doc.id,\r\n                articulos,\r\n                imageUrl,\r\n                linkUrl,\r\n                routeName: encodeURI(title.toLowerCase()),\r\n                size,\r\n                title,\r\n            };\r\n        } else if (type === 'posts') {\r\n            const {\r\n                content,\r\n                description,\r\n                imageUrl,\r\n                linkUrl,\r\n                title,\r\n            } = doc.data();\r\n\r\n            return {\r\n                content,\r\n                description,\r\n                id: doc.id,\r\n                imageUrl,\r\n                linkUrl,\r\n                routeName: encodeURI(title.toLowerCase()),\r\n                title,\r\n            };\r\n        }\r\n        return {\r\n            id: doc.id,\r\n            error: 'ERROR',\r\n        };\r\n    });\r\n\r\n    return transformCollections.reduce((accumulator, collection) => {\r\n        accumulator[collection.title.toLowerCase()] = collection;\r\n        return accumulator;\r\n    }, {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        }, reject);\r\n    });\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(googleProvider);\r\n};\r\n\r\n//------------------------------------------------------------------------------------//\r\n//------------------------------------------------------------------------------------//\r\n//------------------------------------------------------------------------------------//\r\n\r\nexport const addCollectionAndDocuments = async (\r\n    collectionKey,\r\n    objectsToAdd\r\n) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    const batch = firestore.batch();\r\n\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n    });\r\n\r\n    return await batch.commit();\r\n};\r\n\r\n//------------------------------------------------------------------------------------//\r\n//------------------------------------------------------------------------------------//\r\n//------------------------------------------------------------------------------------//\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}